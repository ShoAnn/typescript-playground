{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/anwarr/project/web/typescript/todolist-next/lib/prisma.ts"],"sourcesContent":["// lib/prisma.ts\nimport { PrismaClient } from '@prisma/client';\n\n// This prevents instantiating a new PrismaClient in development during hot-reloads.\nconst prismaClientSingleton = () => {\n  return new PrismaClient();\n};\n\ndeclare global {\n  var prisma: undefined | ReturnType<typeof prismaClientSingleton>;\n}\n\nconst prisma = globalThis.prisma ?? prismaClientSingleton();\n\nexport default prisma;\n\nif (process.env.NODE_ENV !== 'production') globalThis.prisma = prisma;\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAChB;;AAEA,oFAAoF;AACpF,MAAM,wBAAwB;IAC5B,OAAO,IAAI,6HAAA,CAAA,eAAY;AACzB;AAMA,MAAM,SAAS,WAAW,MAAM,IAAI;uCAErB;AAEf,wCAA2C,WAAW,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///home/anwarr/project/web/typescript/todolist-next/src/app/actions/action.ts"],"sourcesContent":["\"use server\"\n\nimport { revalidatePath } from \"next/cache\"\nimport prisma from \"../../../lib/prisma\";\n\nexport async function createTask(data: FormData) {\n\ttry {\n\t\tawait prisma.task.create({\n\t\t\tdata: {\n\t\t\t\ttitle: data.get(\"title\") as string,\n\t\t\t\tuserId: 1\n\t\t\t},\n\t\t});\n\t} catch (error) {\n\t\tconsole.error(\"Failed to create todo:\", error);\n\t\t// Optionally, return an error message to the client\n\t\treturn { message: \"Failed to create todo.\" };\n\t}\n\n\t// Revalidate the path to trigger a re-render\n\trevalidatePath(\"/\");\n}\n\nexport async function deleteTask(id: number) {\n\ttry {\n\t\tawait prisma.task.delete({\n\t\t\twhere: {\n\t\t\t\tid\n\t\t\t}\n\t\t})\n\t} catch (error) {\n\t\tconsole.log(`error deleting task: ${error}`)\n\t}\n\trevalidatePath(\"/\")\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;;;;;;AAEO,eAAe,WAAW,IAAc;IAC9C,IAAI;QACH,MAAM,6GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACxB,MAAM;gBACL,OAAO,KAAK,GAAG,CAAC;gBAChB,QAAQ;YACT;QACD;IACD,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,0BAA0B;QACxC,oDAAoD;QACpD,OAAO;YAAE,SAAS;QAAyB;IAC5C;IAEA,6CAA6C;IAC7C,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;AAChB;AAEO,eAAe,WAAW,EAAU;IAC1C,IAAI;QACH,MAAM,6GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACxB,OAAO;gBACN;YACD;QACD;IACD,EAAE,OAAO,OAAO;QACf,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,OAAO;IAC5C;IACA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;AAChB;;;IA7BsB;IAkBA;;AAlBA,+OAAA;AAkBA,+OAAA","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///home/anwarr/project/web/typescript/todolist-next/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {createTask as '40653e6991ef16349580fadb4eca0c59fd6a94ad7a'} from 'ACTIONS_MODULE0'\nexport {deleteTask as '407326333af3681593fbd65e47f56e73e9e8bb061c'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/anwarr/project/web/typescript/todolist-next/src/app/components/TaskList.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/TaskList.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/TaskList.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///home/anwarr/project/web/typescript/todolist-next/src/app/components/TaskList.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/TaskList.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/TaskList.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///home/anwarr/project/web/typescript/todolist-next/src/app/page.tsx"],"sourcesContent":["import TaskList from \"./components/TaskList\";\nimport prisma from \"../../lib/prisma\";\n\n// 1. Fetch data directly on the server\nasync function getTasks() {\n    // You can use Prisma, or any other DB client here\n    const tasks = await prisma.task.findMany();\n    return tasks;\n}\n\nexport default async function TasksPage() {\n    // 2. Await the data\n    const initialTasks = await getTasks();\n\n    // 3. Pass the data as props to your client component\n    return <TaskList initialTasks={initialTasks} />;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,uCAAuC;AACvC,eAAe;IACX,kDAAkD;IAClD,MAAM,QAAQ,MAAM,6GAAA,CAAA,UAAM,CAAC,IAAI,CAAC,QAAQ;IACxC,OAAO;AACX;AAEe,eAAe;IAC1B,oBAAoB;IACpB,MAAM,eAAe,MAAM;IAE3B,qDAAqD;IACrD,qBAAO,8OAAC,qIAAA,CAAA,UAAQ;QAAC,cAAc;;;;;;AACnC","debugId":null}}]
}